@model EwoQ.Models.IndexAdminViewModel
@{
    ViewBag.Title = "Página principal";
}
<!-- Morris Chart Css-->
<link href="~/Scripts/Adminbsb/plugins/morrisjs/morris.css" rel="stylesheet" />
<script src="~/Scripts/vue.min.js"></script>
<script src="~/Scripts/axios.min.js"></script>
<link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
<link href="@Url.Content("https://cdn.jsdelivr.net/npm/@mdi/font@5.x/css/materialdesignicons.min.css")" rel="stylesheet" type="text/css" />
<link href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css" rel="stylesheet">

<style>
    .info-box .content .text {
        //font-weight: bold;
        //font-size:13px;
    }

    .card {
        border-radius: 10px;
        margin-top: 25px;
    }

    svg:not(:root) {
        left: 50% !important;
        transform: translateX(-50%);
    }
</style>

<div class="row clearfix">
    <div class="col-md-6">
        <div class="card clearfix">
            <div class="header">
                <h2>DATOS DE INCIDENTE</h2>
            </div>
            <div class="body">
                <div class="col-md-12">
                    <div class="info-box bg-light-green hover-expand-effect">
                        <div class="icon">
                            <i class="material-icons">playlist_add_check</i>
                        </div>
                        <div class="content">
                            <div class="text">INCIDENTES REPORTADOS</div>
                            <div class="number count-to" data-from="0" data-to="@Model.IncidentesReportados" data-speed="2000" data-fresh-interval="20"></div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="info-box bg-light-green hover-expand-effect">
                        <div class="icon">
                            <i class="material-icons">playlist_play</i>
                        </div>
                        <div class="content">
                            <div class="text">INCIDENTES EN PROCESO</div>
                            <div class="number count-to" data-from="0" data-to="@Model.IncidentespProceso" data-speed="2000" data-fresh-interval="20"></div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="info-box bg-light-green hover-expand-effect">
                        <div class="icon">
                            <i class="material-icons">playlist_play</i>
                        </div>
                        <div class="content">
                            <div class="text">INCIDENTES CERRADOS</div>
                            <div class="number count-to" data-from="0" data-to="@Model.IncidentesCerrados" data-speed="2000" data-fresh-interval="20"></div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="info-box bg-light-green hover-expand-effect">
                        <div class="icon">
                            <i class="material-icons">timer_off</i>
                        </div>
                        <div class="content">
                            <div class="text">TIEMPO LÍNEAS PARADAS (MIN)</div>
                            <div class="number count-to" data-from="0" data-to="@Model.TiempoLinParada" data-speed="2000" data-fresh-interval="20"></div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="info-box bg-light-green hover-expand-effect">
                        <div class="icon">
                            <i class="material-icons">person_add</i>
                        </div>
                        <div class="content">
                            <div class="text">USUARIOS REGISTRADOS</div>
                            <div class="number count-to" data-from="0" data-to="@Model.UsuariosRegistrados" data-speed="2000" data-fresh-interval="20"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="header">
                <h2>Tipo de incidente o no conformidad</h2>
            </div>
            <div class="body">
                <div id="donut_chart" class="dashboard-donut-chart"></div>
            </div>
        </div>
    </div>

</div>



@*<div id="app">
    @Html.AntiForgeryToken()
    <v-app>
        <v-main>
            <div>
                <h1>Count is {{count}}</h1>
                <br />
                <p>
                    <button v-on:click="incrementCount">Incrementar contador</button>
                </p>
                <br>
                <v-alert text
                         outlined
                         color="deep-orange"
                         icon="mdi-fire">
                    Tony tincidunt adipiscing enim. In consectetuer turpis ut velit. Maecenas egestas arcu quis ligula mattis placerat. Praesent metus tellus, elementum eu, semper a, adipiscing nec, purus.
                </v-alert>
            </div>
        </v-main>
       
    </v-app>
       
</div>*@

@*<script src="https://cdn.jsdelivr.net/npm/vue@2.x/dist/vue.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>*@

@*<script>
    var vueApp = new Vue({
        el: '#app',
        vuetify: new Vuetify(),
        data: {
            count:@Html.Raw(Json.Encode(Model.Counter))
        },
        methods: {
            incrementCount: function () {            
                this.count++;

                var headers = { "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val() }

                axios.post('/Home/OnPost/counter?counter=' + this.count, null, { headers: headers });
            }
        }
    });
</script>*@
<script>
    $(function () {
        //Widgets count
        $('.count-to').countTo();

        initDonutChart();

    });

    function initDonutChart() {
        //URL PARA OBTENER LOS DATOS
        var url = '@Url.Content("~/")' + "Home/GetDonutData";
        //INICIALIZAR OBJETO AJAX PARA TRAER DATOS DEL SERVIDOR
        $.ajax({
            //PARAMETRIZAR SERVICIO AJAX
            url: url,
            type: 'post',
            //MOSTRAR LOADER ANTES DE INICIAR LA SOLICITUD
            beforeSend: function () {
                $('.page-loader-wrapper').fadeIn();
            },
            success: function (response) {
                Morris.Donut({
                    element: 'donut_chart',
                    data: response,

                    colors: ['rgb(255, 5, 100)', 'rgb(5, 200, 211)', 'rgb(232, 0, 180)','rgb(233, 30, 99)', 'rgb(0, 188, 212)', 'rgb(255, 152, 0)', 'rgb(0, 150, 136)', 'rgb(96, 125, 139)'],
                    formatter: function (y) {
                        return y + '%'
                    }
                });


                //OCULTAR LOADER UNA VEZ CARAGADA LA INFORMACIÓN
                $('.page-loader-wrapper').fadeOut();
            },
            //EN CASO DE ERROR, IMPRIMIRLO
            error: function (request, status, error) {
                alert('Error al aplicar filtros a tiempos de carga: ' + error + request.responseText);

            }
        });

    }
</script>

<!-- Counto Js -->
<script src="~/Scripts/Adminbsb/plugins/jquery-countto/jquery.countTo.js"></script>

<!-- MORRIS Js -->
<script src="~/Scripts/Adminbsb/plugins/raphael/raphael.js"></script>
<script src="~/Scripts/Adminbsb/plugins/morrisjs/morris.js"></script>
